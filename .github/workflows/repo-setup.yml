name: Repository Setup

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Setup Features
        uses: actions/github-script@v6
        with:
          script: |
            // Enable repository features
            await github.rest.repos.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              has_issues: true,
              has_projects: true,
              has_wiki: true,
              allow_merge_commit: true,
              allow_rebase_merge: true
            });
            
            console.log('✓ Repository features enabled');

            // Create default labels
            const labels = [
              { name: 'bug', color: 'd73a4a', description: 'Something is not working' },
              { name: 'enhancement', color: '84b6eb', description: 'New feature request' },
              { name: 'documentation', color: '0075ca', description: 'Documentation improvements' },
              { name: 'high-priority', color: 'b60205', description: 'Urgent attention needed' }
            ];

            for (const label of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ...label
                });
                console.log(`✓ Created label: ${label.name}`);
              } catch (e) {
                console.log(`Note: Label ${label.name} already exists`);
              }
            }

            // Create project board
            try {
              const project = await github.rest.projects.createForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'FnO Trading Development',
                body: 'Main development tracking board'
              });

              const columns = ['To Do', 'In Progress', 'Review', 'Done'];
              for (const column of columns) {
                await github.rest.projects.createColumn({
                  project_id: project.data.id,
                  name: column
                });
                console.log(`✓ Created project column: ${column}`);
              }
            } catch (e) {
              console.log('Note: Project board setup skipped (might already exist)');
            }

            // Setup branch protection
            try {
              await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'main',
                required_status_checks: {
                  strict: true,
                  contexts: ['build']
                },
                enforce_admins: true,
                required_pull_request_reviews: {
                  required_approving_review_count: 1,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true
                },
                restrictions: null
              });
              console.log('✓ Branch protection rules set');
            } catch (e) {
              console.log('Note: Branch protection setup requires additional permissions');
            }